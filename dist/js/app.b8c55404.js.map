{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/App.vue?e9de","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_m","_v","model","callback","$$v","expression","_l","item","label","_s","FIFOnumber","FIFOpercent","LRUnumber","LRUpercent","OPTnumber","OPTpercent","LFUnumber","LFUpercent","CLOCKnumber","CLOCKpercent","on","$event","generate","start","staticStyle","tableData","staticRenderFns","components","methods","console","log","memoryUseBit","flag","num","Instruction","instructionsPath","Frame1","memory","Frame2","Frame3","Frame4","Discription","pointer","convertToPageNum","flag2","missPageFIFO","whoIsEmpty","component","Vue","config","productionTip","use","ElementUI","render","h","App","$mount"],"mappings":"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","file":"js/app.b8c55404.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"container\"},[_vm._m(0),_c('p',[_c('section',{staticClass:\"box01\"},[_c('h3',[_vm._v(\"请选择页面置换算法\")]),_c('br'),_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_c('br'),_c('br')],1)]),_c('p',[_vm._m(1),_c('section',{staticClass:\"box\"},[_c('h3',[_vm._v(\"结果统计分析\")]),_vm._m(2),_c('p',[_vm._v(\"缺页次数：\"),_c('span',{attrs:{\"id\":\"FIFO_miss_page_count\"}},[_vm._v(_vm._s(_vm.FIFOnumber))])]),_c('P',[_vm._v(\"缺页率：\"),_c('span',{attrs:{\"id\":\"FIFO_miss_page_rate\"}},[_vm._v(_vm._s(_vm.FIFOpercent))])]),_vm._m(3),_c('p',[_vm._v(\"缺页次数：\"),_c('span',{attrs:{\"id\":\"LRU_miss_page_count\"}},[_vm._v(_vm._s(_vm.LRUnumber))])]),_c('P',[_vm._v(\"缺页率：\"),_c('span',{attrs:{\"id\":\"LRU_miss_page_rate\"}},[_vm._v(_vm._s(_vm.LRUpercent))])])],1),_c('section',{staticClass:\"box\"},[_c('h3',[_vm._v(\"结果统计分析\")]),_vm._m(4),_c('p',[_vm._v(\"缺页次数：\"),_c('span',{attrs:{\"id\":\"FIFO_miss_page_count\"}},[_vm._v(_vm._s(_vm.OPTnumber))])]),_c('P',[_vm._v(\"缺页率：\"),_c('span',{attrs:{\"id\":\"FIFO_miss_page_rate\"}},[_vm._v(_vm._s(_vm.OPTpercent))])]),_vm._m(5),_c('p',[_vm._v(\"缺页次数：\"),_c('span',{attrs:{\"id\":\"LRU_miss_page_count\"}},[_vm._v(_vm._s(_vm.LFUnumber))])]),_c('P',[_vm._v(\"缺页率：\"),_c('span',{attrs:{\"id\":\"LRU_miss_page_rate\"}},[_vm._v(_vm._s(_vm.LFUpercent))])])],1),_c('section',{staticClass:\"box\"},[_c('h3',[_vm._v(\"结果统计分析\")]),_vm._m(6),_c('p',[_vm._v(\"缺页次数：\"),_c('span',{attrs:{\"id\":\"FIFO_miss_page_count\"}},[_vm._v(_vm._s(_vm.CLOCKnumber))])]),_c('P',[_vm._v(\"缺页率：\"),_c('span',{attrs:{\"id\":\"FIFO_miss_page_rate\"}},[_vm._v(_vm._s(_vm.CLOCKpercent))])]),_c('br'),_c('p',[_vm._v(\"下面的init是按项目要求初始化指令，init2是完全随机初始化指令\")])],1)]),_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\",\"id\":\"start-Btn\"},on:{\"click\":function($event){return _vm.generate()}}},[_c('strong',[_vm._v(\"INIT\")])]),_c('br'),_c('br'),_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\",\"id\":\"start-Btn2\"},on:{\"click\":function($event){return _vm.generate()}}},[_c('strong',[_vm._v(\"INIT2\")])]),_c('br'),_c('br'),_c('el-button',{attrs:{\"type\":\"primary\",\"plain\":\"\",\"id\":\"start-Btn\",\"width\":\"100px\"},on:{\"click\":function($event){return _vm.start()}}},[_c('strong',[_vm._v(\"START\")])]),_c('div',{staticClass:\"show\"},[_c('el-table',{staticClass:\"myTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"max-height\":\"700\"}},[_c('el-table-column',{attrs:{\"fixed\":\"\",\"prop\":\"num\",\"label\":\"Sequence\",\"width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"Instruction\",\"label\":\"Instruction\",\"width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"Frame1\",\"label\":\"Frame1\",\"width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"Frame2\",\"label\":\"Frame2\",\"width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"Frame3\",\"label\":\"Frame3\",\"width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"Frame4\",\"label\":\"Frame4\",\"width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"Discription\",\"label\":\"Discription\",\"width\":\"150\"}})],1)],1),_vm._m(7)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',[_c('h1',[_vm._v(\"Memory Management \"),_c('br'),_vm._v(\"请求调页存储管理模拟\")]),_c('h3',{staticClass:\"subTitle\"},[_vm._v(\"Tongji SSE\")]),_c('h3',{staticClass:\"subTitle\"},[_vm._v(\"1950679 孟繁青\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"box\"},[_c('h3',[_vm._v(\"参数信息\")]),_c('br'),_c('p',[_vm._v(\"内存块数：\"),_c('span',{attrs:{\"id\":\"overall_memory_blocks\"}},[_vm._v(\"4\")])]),_c('br'),_c('p',[_vm._v(\"总指令数：\"),_c('span',{attrs:{\"id\":\"overall_instructions\"}},[_vm._v(\"320\")])]),_c('br'),_c('p',[_vm._v(\"每页存放指令数：\"),_c('span',{attrs:{\"id\":\"instruction_per_page\"}},[_vm._v(\"10\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"FIFO\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"LRU\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"OPT\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"LFU\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"CLOCK\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"footer\"},[_c('pre',[_vm._v(\"          SSE Tongji University\\n\\n          Copyright @ 2021 FanqingM All Rights Reserved.\\n        \")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n    <Table></Table>\n    <el-button @click=\"insertRecord\">插入测试</el-button> -->\n    <div class=\"container\"> \n      <!-- 定义页眉 -->     \n        <header>\n          <h1>Memory Management <br>请求调页存储管理模拟</h1>\n          <h3 class=\"subTitle\">Tongji SSE</h3>\n          <h3 class=\"subTitle\">1950679 孟繁青</h3>\n        </header>\n\n     <!--<main id=\"main\">--> \n       <!--算法选择-->\n      <p>\n        <section class=\"box01\">\n          <h3>请选择页面置换算法</h3><br>\n        <el-select v-model=\"value\" placeholder=\"请选择\">\n          <el-option\n            v-for=\"item in options\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\">\n          </el-option>\n        </el-select>\n            <br>\n            <br>\n        </section>\n      </p>\n\n        <!--项目基础信息展示-->\n      <p>\n        <section class=\"box\">\n          <h3>参数信息</h3><br>\n          <p>内存块数：<span id=\"overall_memory_blocks\">4</span></p><br>\n          <p>总指令数：<span id=\"overall_instructions\">320</span></p><br>\n          <p>每页存放指令数：<span id=\"instruction_per_page\">10</span></p>\n        </section>\n\n        <!--结果统计分析-->\n        <section class=\"box\">\n          <h3>结果统计分析</h3>\n          <p><strong>FIFO</strong></p>\n          <p>缺页次数：<span id=\"FIFO_miss_page_count\">{{FIFOnumber}}</span></P>\n          <P>缺页率：<span id=\"FIFO_miss_page_rate\">{{FIFOpercent}}</span></p>\n          <p><strong>LRU</strong></p>\n          <p>缺页次数：<span id=\"LRU_miss_page_count\">{{LRUnumber}}</span></P>\n          <P>缺页率：<span id=\"LRU_miss_page_rate\">{{LRUpercent}}</span></p>\n        </section>\n        <section class=\"box\">\n          <h3>结果统计分析</h3>\n          <p><strong>OPT</strong></p>\n          <p>缺页次数：<span id=\"FIFO_miss_page_count\">{{OPTnumber}}</span></P>\n          <P>缺页率：<span id=\"FIFO_miss_page_rate\">{{OPTpercent}}</span></p>\n          <p><strong>LFU</strong></p>\n          <p>缺页次数：<span id=\"LRU_miss_page_count\">{{LFUnumber}}</span></P>\n          <P>缺页率：<span id=\"LRU_miss_page_rate\">{{LFUpercent}}</span></p>\n        </section>\n        <section class=\"box\">\n          <h3>结果统计分析</h3>\n          <p><strong>CLOCK</strong></p>\n          <p>缺页次数：<span id=\"FIFO_miss_page_count\">{{CLOCKnumber}}</span></P>\n          <P>缺页率：<span id=\"FIFO_miss_page_rate\">{{CLOCKpercent}}</span></p>\n          <br>\n          <p>下面的init是按项目要求初始化指令，init2是完全随机初始化指令</p>\n        </section>\n      </p>\n\n        <!-- <p><button id=\"start-Btn\" @click=\"start()\"><strong>START</strong> </button></p><br><br><br><br><br> -->\n        <el-button type=\"primary\" plain id=\"start-Btn\" @click=\"generate()\"><strong>INIT</strong></el-button>\n        <br>\n        <br>\n        <el-button type=\"primary\" plain id=\"start-Btn2\" @click=\"generate()\"><strong>INIT2</strong></el-button>\n        <br>\n        <br>\n        <el-button type=\"primary\" plain id=\"start-Btn\" @click=\"start()\" width= \"100px\"><strong>START</strong></el-button>\n        <!--结果展示区域-->\n        <div class=\"show\">\n    <el-table\n    :data=\"tableData\"\n    style=\"width: 100%\"\n    max-height=\"700\"\n    class = \"myTable\">\n    <el-table-column\n      fixed\n      prop=\"num\"\n      label=\"Sequence\"\n      width=\"120\">\n    </el-table-column>\n    <el-table-column\n      prop=\"Instruction\"\n      label=\"Instruction\"\n      width=\"120\">\n    </el-table-column>\n    <el-table-column\n      prop=\"Frame1\"\n      label=\"Frame1\"\n      width=\"120\">\n    </el-table-column>\n    <el-table-column\n      prop=\"Frame2\"\n      label=\"Frame2\"\n      width=\"120\">\n    </el-table-column>\n    <el-table-column\n      prop=\"Frame3\"\n      label=\"Frame3\"\n      width=\"120\">\n    </el-table-column>\n    <el-table-column\n      prop=\"Frame4\"\n      label=\"Frame4\"\n      width=\"120\">\n    </el-table-column>\n    <el-table-column\n    prop=\"Discription\"\n    label=\"Discription\"\n    width=\"150\">\n  </el-table-column>\n  </el-table>\n        </div>\n\n        <div class=\"footer\">\n          <pre>\n            SSE Tongji University\n\n            Copyright @ 2021 FanqingM All Rights Reserved.\n          </pre>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import Table from './components/Table.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    // Table\n  },\n  methods: {\n      deleteRow(index, rows) {\n        rows.splice(index, 1);\n      },\n      searchLFU(currentCnt)\n      {\n        var res=[0,0,0,0];\n        var temp1 = this.memory[0];\n        var temp2 = this.memory[1];\n        var temp3 = this.memory[2];\n        var temp4 = this.memory[3];     //记下当前4个内存块中的页号\n        for(var i=currentCnt-1;i>=0;i--)\n        {\n          if(this.pageNumPath[i] == temp1)\n          {\n            res[0] = res[0]+1;\n          }\n          else if(this.pageNumPath[i] == temp2)\n          {\n            res[1] = res[1]+1;\n          }\n          else if(this.pageNumPath[i] == temp3)\n          {\n            res[2] = res[2]+1;\n          }\n          else if(this.pageNumPath[i] == temp4)\n          {\n            res[3] = res[3]+1;\n          }\n        }\n        //下面找res数组中最小的对应的下表\n        var imin = 0;\n        var min = res[0];\n        for(var n=1;n<4;n++)\n        {\n          if(res[n]<min)\n          {\n            min = res[n];\n            imin = n;\n          }\n        }\n        return imin;\n      },\n      searchOPT(currentCnt)    //指出当前的指令条数，从此往前找\n      {\n        //我们使用pageNumPath记录指令执行序列对应的页号的序列\n        var res = [-1,-1,-1,-1];\n        //此时内存块中都是有东西的，所以不可能出现-1\n        var temp1 = this.memory[0];\n        var temp2 = this.memory[1];\n        var temp3 = this.memory[2];\n        var temp4 = this.memory[3];     //记下当前4个内存块中的页号\n        var i;\n        var j;\n        var k;\n        var m;\n        for(i = currentCnt+1;i<320;i++)\n        {\n          //一定出现过，不然就不会在内存快中存在了\n          if(this.pageNumPath[i] == temp1)\n          {\n            res[0] = i;\n            break;\n          }\n        }\n        if(i==320)\n        {\n          res[0] = 320;\n        }\n        for(j = currentCnt+1;j<320;j++)\n        {\n          //一定出现过，不然就不会在内存快中存在了\n          if(this.pageNumPath[j] == temp2)\n          {\n            res[1] = j;\n            break;\n          }\n        }\n        if(j==320)\n        {\n          res[1] = 320;\n        }\n        for(k = currentCnt+1;k<320;k++)\n        {\n          //一定出现过，不然就不会在内存快中存在了\n          if(this.pageNumPath[k] == temp3)\n          {\n            res[2] = k;\n            break;\n          }\n        }\n        if(k==320)\n        {\n          res[2] = 320;\n        }\n        for(m = currentCnt+1;m<320;m++)\n        {\n          //一定出现过，不然就不会在内存快中存在了\n          if(this.pageNumPath[m] == temp4)\n          {\n            res[3] = m;\n            break;\n          }\n        }\n        if(m==320)\n        {\n          res[3] = 320;\n        }\n        //下面找res数组中最小值对应的下表\n        var imax = 0;\n        var max = res[0];\n        for(var n=1;n<4;n++)\n        {\n          if(res[n]>max)\n          {\n            max = res[n];\n            imax = n;\n          }\n        }\n        return imax;\n      },\n      searchLRU(currentCnt)    //指出当前的指令条数，从此往前找\n      {\n        //我们使用pageNumPath记录指令执行序列对应的页号的序列\n        var res = [-1,-1,-1,-1];\n        //此时内存块中都是有东西的，所以不可能出现-1\n        var temp1 = this.memory[0];\n        var temp2 = this.memory[1];\n        var temp3 = this.memory[2];\n        var temp4 = this.memory[3];     //记下当前4个内存块中的页号\n        for(var i = currentCnt-1;i>=0;i--)\n        {\n          //一定出现过，不然就不会在内存快中存在了\n          if(this.pageNumPath[i] == temp1)\n          {\n            res[0] = i;\n            break;\n          }\n        }\n        for(var j = currentCnt-1;j>=0;j--)\n        {\n          //一定出现过，不然就不会在内存快中存在了\n          if(this.pageNumPath[j] == temp2)\n          {\n            res[1] = j;\n            break;\n          }\n        }\n        for(var k = currentCnt-1;k>=0;k--)\n        {\n          //一定出现过，不然就不会在内存快中存在了\n          if(this.pageNumPath[k] == temp3)\n          {\n            res[2] = k;\n            break;\n          }\n        }\n        for(var m = currentCnt-1;m>=0;m--)\n        {\n          //一定出现过，不然就不会在内存快中存在了\n          if(this.pageNumPath[m] == temp4)\n          {\n            res[3] = m;\n            break;\n          }\n        }\n        //下面找res数组中最小值对应的下表\n        var imin = 0;\n        var min = res[0];\n        for(var n=1;n<4;n++)\n        {\n          if(res[n]<min)\n          {\n            min = res[n];\n            imin = n;\n          }\n        }\n        return imin;\n      },\n      searchFIFO()\n      {\n        var imin = 0;\n        var min = this.memoryFIFO[0];\n        for(var i=1;i<4;i++)\n        {\n          if(this.memoryFIFO[i]<min)\n          {\n            min = this.memoryFIFO[i];\n            imin = i;\n          }\n        }\n        return imin;\n      },\n      whoIsEmpty()\n      {\n        var i = 0;\n        for(i=0;i<4;i++)\n        {\n          if(this.memory[i] == -1)\n          {\n            console.log(\"第\"+(i+1)+\"个内存块目前空闲\");\n            return i;\n          }\n        }\n        if(i == 4)\n        {\n          //console.log(\"没有内存块空闲需要进行置换算法\");\n          return -1;\n        }\n      },\n      convertToPageNum(ins)\n      {\n        return Math.floor(ins / 10);\n      },\n      generate()    //初始化指令序列\n      { \n        this.isInit = true;\n        var currentCount = 0;\n        var flag = true;\n        var temp = Math.floor(Math.random() * 320);   //0--319\n        this.instructionsPath.push(temp);\n        this.pageNumPath.push(this.convertToPageNum(temp));\n        this.instructionsPath.push(temp+1);\n        this.pageNumPath.push(this.convertToPageNum(temp+1));\n        currentCount = 2;\n        while(flag)\n        {\n          if(currentCount >= 320)\n          {\n            break;\n          }\n          var temp2 = Math.floor(Math.random() * (temp));  //0--temp1-1\n          this.instructionsPath.push(temp2);\n          this.pageNumPath.push(this.convertToPageNum(temp2));\n          this.instructionsPath.push(temp2+1);\n          this.pageNumPath.push(this.convertToPageNum(temp2+1));\n          currentCount = currentCount+2;\n          if(currentCount >= 320)\n          {\n            break;\n          }\n          var temp3 = Math.floor(Math.random() * (320-temp2-2))+(temp2+2);\n          this.instructionsPath.push(temp3);\n          this.pageNumPath.push(this.convertToPageNum(temp3));\n          this.instructionsPath.push(temp3+1);\n          this.pageNumPath.push(this.convertToPageNum(temp3+1));\n          currentCount = currentCount+2;\n          if(currentCount >= 320)\n          {\n            break;\n          }\n          temp = temp3;\n        }\n      },\n      generate2()\n      {\n        this.isInit = true;\n        for(var i=0;i<320;i++)\n        {\n          this.instructionsPath[i] = Math.floor(Math.random()*(320));\n          this.pageNumPath[i] = this.convertToPageNum(this.instructionsPath[i]);\n        }\n      },\n      isInMemory(ins)     //ins是指令的编号0-319，判断指令是否已经在内存中（即不需要发生缺页中断）\n      {\n        for (let i = 0; i < 4; i++) {\n            var j = Math.floor(ins / 10)//该指令所在页号\n            if (j === this.memory[i]) {\n                //console.log(\"在第\" + this.memory[i] + \"页\")\n                return i //找到，找到就不需要缺页中断，直接运行下一条指令\n            }\n        }\n        return -1 //返回页号，要将该页掉入内存的某一个块中，发生了缺页中断\n      },\n      CLOCK()\n      {\n        var pointer = 0;\n        for(var i=0;i<320;i++)\n        {\n          var flag = this.isInMemory(this.instructionsPath[i])\n          if(flag >= 0)       //说明已经在某个内存快中了\n          {\n            console.log(\"指令\"+this.instructionsPath[i]+\"已经在内存快\"+(flag+1)+\"中\");\n            this.memoryUseBit[flag] = 1;\n            this.tableData.push({\n            num: i+1,\n            Instruction: this.instructionsPath[i],\n            Frame1: this.memory[0],\n            Frame2: this.memory[1],\n            Frame3: this.memory[2],\n            Frame4: this.memory[3],\n            Discription:\"指令\"+this.instructionsPath[i]+\"已经在内存块\"+(flag+1)+\"中\"\n            });\n          }\n          else\n          {\n            //说明发生了缺页中断\n            this.missPageCLOCK = this.missPageCLOCK+1;\n            console.log(\"发生了缺页中断\");\n            //第flag个页没有（从0计数）\n            //先找有没有空块\n            var flag2 = this.whoIsEmpty();\n            if(flag2 == -1)\n            {\n              //说明需要进行置换\n              while(this.memoryUseBit[pointer] === 1)\n              {\n                this.memoryUseBit[pointer] = 0;\n                pointer = pointer+1;\n                pointer = pointer%4;\n              }\n              this.memory[pointer] = this.convertToPageNum(this.instructionsPath[i]);\n              this.memoryUseBit[pointer] = 1;\n              //this.memoryFIFO[aim] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(pointer+1)+\"个内存块中\");\n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"发生置换，指令\"+this.instructionsPath[i]+\"掉入第\"+(pointer+1)+\"个内存块中\",\n              });\n            }\n            else               //直接将该指令序号插入下表是flag2(此时是空的)的块\n            {\n              this.memoryUseBit[pointer] = 1;\n              this.memory[pointer] = this.convertToPageNum(this.instructionsPath[i]); \n              pointer = pointer+1;\n              pointer = pointer%4;\n              //this.memory[flag2] = this.convertToPageNum(this.instructionsPath[i]);   //把这个指令所在页的页号扔进去\n              //this.memoryFIFO[flag2] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(pointer+1)+\"个内存块中\"); \n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"仅发生缺页，指令\"+this.instructionsPath[i]+\"掉入第\"+(pointer+1)+\"个内存块中\",\n              });\n            }\n          }\n        }\n        this.CLOCKnumber=String(this.missPageCLOCK);\n        this.CLOCKpercent=String(this.missPageCLOCK/320);\n      },\n      LFU()\n      {\n        //基本思想是过去访问的次数多，将来也会多。\n        for(var i=0;i<320;i++)\n        {\n          var flag = this.isInMemory(this.instructionsPath[i])\n          if(flag >= 0)       //说明已经在某个内存快中了\n          {\n            console.log(\"指令\"+this.instructionsPath[i]+\"已经在内存快\"+(flag+1)+\"中\");\n            this.tableData.push({\n            num: i+1,\n            Instruction: this.instructionsPath[i],\n            Frame1: this.memory[0],\n            Frame2: this.memory[1],\n            Frame3: this.memory[2],\n            Frame4: this.memory[3],\n            Discription:\"指令\"+this.instructionsPath[i]+\"已经在内存块\"+(flag+1)+\"中\"\n            });\n          }\n          else\n          {\n            //说明发生了缺页中断\n            console.log(\"发生了缺页中断\");\n            //第flag个页没有（从0计数）\n            this.missPageLFU = this.missPageLFU+1;\n            //先找有没有空块\n            var flag2 = this.whoIsEmpty();\n            if(flag2 == -1)\n            {\n              //说明需要进行置换\n              var aim = this.searchLFU(i);\n              this.memory[aim] = this.convertToPageNum(this.instructionsPath[i]);\n              //this.memoryFIFO[aim] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(aim+1)+\"个内存块中\");\n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"发生置换，指令\"+this.instructionsPath[i]+\"掉入第\"+(aim+1)+\"个内存块中\",\n              });\n            }\n            else               //直接将该指令序号插入下表是flag2的块\n            {\n              this.memory[flag2] = this.convertToPageNum(this.instructionsPath[i]);   //把这个指令所在页的页号扔进去\n              //this.memoryFIFO[flag2] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(flag2+1)+\"个内存块中\"); \n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"仅发生缺页，指令\"+this.instructionsPath[i]+\"掉入第\"+(flag2+1)+\"个内存块中\",\n              });\n            }\n          }\n        }\n        this.LFUnumber=String(this.missPageLFU);\n        this.LFUpercent=String(this.missPageLFU/320);\n      },\n      OPT()\n      {\n        for(var i=0;i<320;i++)\n        {\n          var flag = this.isInMemory(this.instructionsPath[i])\n          if(flag >= 0)       //说明已经在某个内存快中了\n          {\n            console.log(\"指令\"+this.instructionsPath[i]+\"已经在内存快\"+(flag+1)+\"中\");\n            this.tableData.push({\n            num: i+1,\n            Instruction: this.instructionsPath[i],\n            Frame1: this.memory[0],\n            Frame2: this.memory[1],\n            Frame3: this.memory[2],\n            Frame4: this.memory[3],\n            Discription:\"指令\"+this.instructionsPath[i]+\"已经在内存块\"+(flag+1)+\"中\"\n            });\n          }\n          else\n          {\n            //说明发生了缺页中断\n            console.log(\"发生了缺页中断\");\n            //第flag个页没有（从0计数）\n            this.missPageOPT = this.missPageOPT+1;\n            //先找有没有空块\n            var flag2 = this.whoIsEmpty();\n            if(flag2 == -1)\n            {\n              //说明需要进行置换,我们需要查看此时4个内存块中的页号，谁是最早出现的，就换到这个内存块里面\n              //我们找当前4个内存块中谁第一个有数据,事实上memoryFIFO中谁小谁就是先来的，要换掉他\n              var aim = this.searchOPT(i);\n              this.memory[aim] = this.convertToPageNum(this.instructionsPath[i]);\n              //this.memoryFIFO[aim] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(aim+1)+\"个内存块中\");\n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"发生置换，指令\"+this.instructionsPath[i]+\"掉入第\"+(aim+1)+\"个内存块中\",\n              });\n            }\n            else               //直接将该指令序号插入下表是flag2的块\n            {\n              this.memory[flag2] = this.convertToPageNum(this.instructionsPath[i]);   //把这个指令所在页的页号扔进去\n              //this.memoryFIFO[flag2] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(flag2+1)+\"个内存块中\"); \n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"仅发生缺页，指令\"+this.instructionsPath[i]+\"掉入第\"+(flag2+1)+\"个内存块中\",\n              });\n            }\n          }\n        }\n        this.OPTnumber=String(this.missPageOPT);\n        this.OPTpercent=String(this.missPageOPT/320);\n      },\n      LRU()\n      {\n        for(var i=0;i<320;i++)\n        {\n          var flag = this.isInMemory(this.instructionsPath[i])\n          if(flag >= 0)       //说明已经在某个内存快中了\n          {\n            console.log(\"指令\"+this.instructionsPath[i]+\"已经在内存快\"+(flag+1)+\"中\");\n            this.tableData.push({\n            num: i+1,\n            Instruction: this.instructionsPath[i],\n            Frame1: this.memory[0],\n            Frame2: this.memory[1],\n            Frame3: this.memory[2],\n            Frame4: this.memory[3],\n            Discription:\"指令\"+this.instructionsPath[i]+\"已经在内存块\"+(flag+1)+\"中\"\n            });\n          }\n          else\n          {\n            //说明发生了缺页中断\n            console.log(\"发生了缺页中断\");\n            //第flag个页没有（从0计数）\n            this.missPageLRU = this.missPageLRU+1;\n            //先找有没有空块\n            var flag2 = this.whoIsEmpty();\n            if(flag2 == -1)\n            {\n              //说明需要进行置换,我们需要查看此时4个内存块中的页号，谁是最早出现的，就换到这个内存块里面\n              //我们找当前4个内存块中谁第一个有数据,事实上memoryFIFO中谁小谁就是先来的，要换掉他\n              var aim = this.searchLRU(i);\n              this.memory[aim] = this.convertToPageNum(this.instructionsPath[i]);\n              //this.memoryFIFO[aim] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(aim+1)+\"个内存块中\");\n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"发生置换，指令\"+this.instructionsPath[i]+\"掉入第\"+(aim+1)+\"个内存块中\",\n              });\n            }\n            else               //直接将该指令序号插入下表是flag2的块\n            {\n              this.memory[flag2] = this.convertToPageNum(this.instructionsPath[i]);   //把这个指令所在页的页号扔进去\n              //this.memoryFIFO[flag2] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(flag2+1)+\"个内存块中\"); \n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"仅发生缺页，指令\"+this.instructionsPath[i]+\"掉入第\"+(flag2+1)+\"个内存块中\",\n              });\n            }\n          }\n        }\n        this.LRUnumber=String(this.missPageLRU);\n        this.LRUpercent=String(this.missPageLRU/320);\n      },\n      FIFO()\n      {\n        for(var i=0;i<320;i++)\n        {\n          //内存快里面是页号，不是指令序号\n          var flag = this.isInMemory(this.instructionsPath[i])\n          if(flag >= 0)\n          {\n            console.log(\"指令\"+this.instructionsPath[i]+\"已经在内存快\"+(flag+1)+\"中\");\n            this.tableData.push({\n            num: i+1,\n            Instruction: this.instructionsPath[i],\n            Frame1: this.memory[0],\n            Frame2: this.memory[1],\n            Frame3: this.memory[2],\n            Frame4: this.memory[3],\n            Discription:\"指令\"+this.instructionsPath[i]+\"已经在内存块\"+(flag+1)+\"中\"\n            });\n          }\n          else    //已经发生了缺页，下面判断是否需要置换\n          {\n            console.log(\"发生了缺页中断\");\n            //第flag个页没有（从0计数）\n            this.missPageFIFO = this.missPageFIFO+1;\n            //先找有没有空块\n            var flag2 = this.whoIsEmpty();\n            if(flag2 == -1)    //说明需要进行置换\n            {\n              //我们找当前4个内存块中谁第一个有数据,事实上memoryFIFO中谁小谁就是先来的，要换掉他\n              var aim = this.searchFIFO();\n              this.memory[aim] = this.convertToPageNum(this.instructionsPath[i]);\n              this.memoryFIFO[aim] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(aim+1)+\"个内存块中\");\n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"发生置换，指令\"+this.instructionsPath[i]+\"掉入第\"+(aim+1)+\"个内存块中\",\n              });\n            }\n            else               //直接将该指令序号插入下表是flag2的块\n            {\n              this.memory[flag2] = this.convertToPageNum(this.instructionsPath[i]);   //把这个指令所在页的页号扔进去\n              this.memoryFIFO[flag2] = i;  \n              console.log(\"指令\"+this.instructionsPath[i]+\"掉入第\"+(flag2+1)+\"个内存块中\"); \n              this.tableData.push({\n              num: i+1,\n              Instruction: this.instructionsPath[i],\n              Frame1: this.memory[0],\n              Frame2: this.memory[1],\n              Frame3: this.memory[2],\n              Frame4: this.memory[3],\n              Discription:\"仅发生缺页，指令\"+this.instructionsPath[i]+\"掉入第\"+(flag2+1)+\"个内存块中\",\n              });\n            }\n          }\n        }\n        this.FIFOnumber=String(this.missPageFIFO);\n        this.FIFOpercent=String(this.missPageFIFO/320);\n        \n      },\n      start()\n      {\n        if(this.isInit === false)\n        {\n          alert(\"🆘请先随机初始化指令，点击INIT按钮\");\n        }\n        else\n        {\n          if(this.value === '')\n          {\n            alert(\"🆘请先选择一种方法\");\n          }\n          else\n          {\n            this.tableData = [{}]\n            //this.generate();\n            for(var i=0;i<4;i++)\n            {\n              this.memory[i] = -1;\n              this.memoryUseBit[i] = -1;\n              this.memoryFIFO[i] = -1;\n            }\n            this.instructionsCurrentNum = 0;     \n            if(this.value == 1)\n            {\n              this.missPageFIFO = 0;\n              this.FIFOnumber = 'NULL';\n              this.FIFOpercent = 'NULL';\n              this.FIFO();\n            }\n            else if(this.value == 2)\n            {\n              this.missPageLRU = 0;\n              this.LRUnumber = 'NULL';\n              this.LRUpercent = 'NULL';\n              this.LRU();\n            }\n            else if(this.value == 3)\n            {\n              this.missPageOPT = 0;\n              this.OPTnumber = 'NULL';\n              this.OPTpercent = 'NULL';\n              this.OPT();\n            }\n            else if(this.value == 4)\n            {\n              this.missPageLFU = 0;\n              this.LFUnumber = 'NULL';\n              this.LFUpercent = 'NULL';\n              this.LFU();\n            }\n            else if(this.value == 5)\n            {\n              this.missPageCLOCK = 0;\n              this.CLOCKnumber = 'NULL';\n              this.CLOCKpercent = 'NULL';\n              this.CLOCK();\n            }\n          }\n        }\n      }\n    },\n    data() {\n      return {\n        options: [{\n          value: 1,\n          label: 'FIFO'\n        }, {\n          value: 2,\n          label: 'LRU'\n        }, {\n          value: 3,\n          label: 'OPT'\n        }, {\n          value: 4,\n          label: 'LFU'\n        },\n        {\n          value: 5,\n          label: 'CLOCK'\n        }],\n        value: '',\n\n        isInit: false,\n\n        memoryBlock: 4,                //内存块数\n        instructionsNum: 320,          //总指令数\n        instructionsPerPage: 10,       //每页存放指令数\n        pagesNum: 32,                  //总页数\n        instructionsCurrentNum: 0,     //记录执行的指令个数\n        missPageFIFO: 0,               //FIFO缺页个数\n        missPageLRU: 0,                //LRU缺页个数\n        missPageOPT: 0,                //OPT缺页个数\n        missPageLFU: 0,                //LFU缺页个数\n        missPageCLOCK: 0,              //CLOCK缺页个数\n        memory: [...Array(4)].map(() => -1),           //4个内存中存储的页号\n        memoryUseBit: [...Array(4)].map(() => -1),     //4个内存中当前页号的use bit，为了CLOCK算法\n        memoryFIFO: [...Array(4)].map(()=> -1),        //记录FIFO中内存快被指令填满的先后顺序\n        instructionsPath:[],   //指令执行序列\n        pageNumPath:[],        //指令执行序列对应的页号的序列，为了LRU\n        FIFOnumber:'NULL',\n        FIFOpercent:'NULL',\n        LRUnumber:'NULL',\n        LRUpercent:'NULL',\n\n        OPTnumber:'NULL',\n        OPTpercent:'NULL',\n        LFUnumber:'NULL',\n        LFUpercent:'NULL',\n        CLOCKnumber:'NULL',\n        CLOCKpercent:'NULL',\n        tableData: [{\n        }]\n      }\n    }\n}\n</script>\n\n<style>\n#app {\n  /* font-family: Avenir, Helvetica, Arial, sans-serif; */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n  background: /*#E0F7FA*//*#E2F0D9*//*#ECF5E7*/#CCEDFF;\n  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n  font-size: 11px;\n  color: /*#00838f*/#1178B7;\n}\n.myTable {\n  margin-top: 100px;\n}\n#start-Btn {\n  margin-top:30px;\n}\n.container {\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  width: 60%;\n}\n\n\n.box01{\n  background: #fff;\n  border-radius: 2px;\n  display: inline-block;\n  height: 150px; \n  margin: 2rem;\n  position: relative;\n  width: 400px;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n}\n\n.box{\n  background: #fff;\n  border-radius: 2px;\n  display: inline-block;\n  height: 240px;\n  margin: 2rem;\n  position: relative;\n  width: 250px;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n}\n\ntable,\nth,\ntd {\n    border: 1px solid #00838F;\n    border-collapse: separate;\n    \n}\n\ntable {\n  width: 80%;\n  margin: auto;\n  /*height: 100px;*/\n}\n\nth,\ntd {\n    padding: 10px;\n    width: 150px;\n}\n\n.show{\n  height:650px;\n  overflow-y: scroll;\n  overflow-x: none;\n}\n\n#memory_table{\n  width: 100%;\n  margin: auto;\n  /*height: 650px;*/\n  vertical-align: middle;\n}\n\n.footer{\n  display: inline-block;\n  vertical-align: middle;\n}\n\n\nbutton{\n  top: 12px;\n  text-align: center;\n  font-family: \"Lucida Sans\",\"Microsoft JhengHei\";\n  font-weight:300;\n  position: relative;\n  height: 40px;\n  width: 80px;\n  border: 1px solid #fff;\n  background: /*#80CBC4*/#FDFCD6;\n  border-radius: 6px;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7b5e179a&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport App from './App.vue'\n\nVue.config.productionTip = false\nVue.use(ElementUI);\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}